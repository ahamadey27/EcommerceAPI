@page
@model LoginModel
@{
    ViewData["Title"] = "Login Test";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="card slide-up">
                <div class="card-header bg-primary text-white text-center">
                    <h3 class="card-title mb-0">
                        <i class="fas fa-sign-in-alt me-2"></i>Login Test
                    </h3>
                </div>
                <div class="card-body p-4">
                    <div id="alert-container"></div>
                    <div id="debug-log" style="background: #f8f9fa; padding: 10px; margin: 10px 0; font-family: monospace; font-size: 12px; max-height: 200px; overflow-y: auto; border: 1px solid #ddd;"></div>
                    
                    <form id="login-form">
                        <div class="mb-3">
                            <label for="email" class="form-label">
                                <i class="fas fa-envelope me-2"></i>Email Address
                            </label>
                            <input type="email" class="form-control" id="email" value="admin@ecommerce.com" required>
                        </div>
                        
                        <div class="mb-4">
                            <label for="password" class="form-label">
                                <i class="fas fa-lock me-2"></i>Password
                            </label>
                            <input type="password" class="form-control" id="password" value="Admin123!" required>
                        </div>
                        
                        <button type="submit" class="btn btn-primary w-100 mb-3" id="login-btn">
                            <span class="spinner-border spinner-border-sm d-none me-2" role="status"></span>
                            <i class="fas fa-sign-in-alt me-2"></i>Login Test
                        </button>
                    </form>
                    
                    <div class="text-center">
                        <a href="/Login" class="btn btn-link">Back to Regular Login</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Self-contained login test - no external dependencies
const debugLog = document.getElementById('debug-log');

function log(message) {
    const timestamp = new Date().toLocaleTimeString();
    debugLog.innerHTML += `[${timestamp}] ${message}<br>`;
    debugLog.scrollTop = debugLog.scrollHeight;
    console.log(message);
}

document.addEventListener('DOMContentLoaded', function() {
    log('DOM loaded, setting up login test');
    
    const API_BASE_URL = window.location.origin + '/api';
    log(`API_BASE_URL: ${API_BASE_URL}`);
    
    const loginForm = document.getElementById('login-form');
    if (!loginForm) {
        log('ERROR: Login form not found!');
        return;
    }
    
    log('Login form found, adding event listener');
    
    loginForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        log('Form submitted');
        
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        log(`Email: ${email}, Password length: ${password.length}`);
        
        const btn = document.getElementById('login-btn');
        const spinner = btn.querySelector('.spinner-border');
        const alertContainer = document.getElementById('alert-container');
        
        // Show loading
        btn.disabled = true;
        spinner.classList.remove('d-none');
        log('Loading state activated');
        
        try {
            log('Making API call...');
            const response = await fetch(`${API_BASE_URL}/auth/login`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email, password })
            });
            
            log(`API response status: ${response.status}`);
            
            if (response.ok) {
                const data = await response.json();
                log(`Login successful! Token received: ${data.token ? 'YES' : 'NO'}`);
                
                // Store token
                if (data.token) {
                    localStorage.setItem('jwt_token', data.token);
                    log('Token stored in localStorage');
                }
                
                alertContainer.innerHTML = '<div class="alert alert-success">Login successful! Redirecting...</div>';
                
                setTimeout(() => {
                    log('Redirecting to /Products');
                    window.location.href = '/Products';
                }, 1500);
                
            } else {
                const errorText = await response.text();
                log(`Login failed: ${errorText}`);
                alertContainer.innerHTML = `<div class="alert alert-danger">Login failed: ${errorText}</div>`;
            }
            
        } catch (error) {
            log(`ERROR: ${error.message}`);
            alertContainer.innerHTML = `<div class="alert alert-danger">Error: ${error.message}</div>`;
        } finally {
            btn.disabled = false;
            spinner.classList.add('d-none');
            log('Loading state cleared');
        }
    });
      log('Event listener attached successfully');
    
    // Also add direct button click handler for debugging
    const loginBtn = document.getElementById('login-btn');
    if (loginBtn) {
        loginBtn.addEventListener('click', function(e) {
            log('Button clicked directly');
        });
        log('Button click listener added');
    } else {
        log('ERROR: Login button not found!');
    }
});
</script>
